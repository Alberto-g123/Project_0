Index: src/main/java/dev/gutierrez/daos/ExpenseDaoPostgres.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/dev/gutierrez/daos/ExpenseDaoPostgres.java b/src/main/java/dev/gutierrez/daos/ExpenseDaoPostgres.java
new file mode 100644
--- /dev/null	(date 1659561236077)
+++ b/src/main/java/dev/gutierrez/daos/ExpenseDaoPostgres.java	(date 1659561236077)
@@ -0,0 +1,41 @@
+package dev.gutierrez.daos;
+
+import dev.gutierrez.entities.Expense;
+import dev.gutierrez.utils.ConnectionUtil;
+
+import java.sql.Connection;
+import java.sql.SQLException;
+import java.util.List;
+
+public class ExpenseDaoPostgres implements ExpenseDAO{
+    @Override
+    public Expense createExpense(Expense expense) {
+        try(Connection conn = ConnectionUtil.createConnection()){
+            String sql = "insert into expense values(default,)";
+
+        }catch(SQLException e){
+            e.printStackTrace();
+        }
+        return null;
+    }
+
+    @Override
+    public Expense getExpenseById(int id) {
+        return null;
+    }
+
+    @Override
+    public List<Expense> getAllExpenses() {
+        return null;
+    }
+
+    @Override
+    public Expense updateExpense(Expense expense) {
+        return null;
+    }
+
+    @Override
+    public boolean deleteExpenseById(int id) {
+        return false;
+    }
+}
Index: src/main/java/dev/gutierrez/handlers/employee/AllEmployeeHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package dev.gutierrez.handlers.employee;\r\n\r\nimport com.google.gson.Gson;\r\nimport dev.gutierrez.app.App;\r\nimport io.javalin.http.Context;\r\nimport io.javalin.http.Handler;\r\nimport org.jetbrains.annotations.NotNull;\r\n\r\npublic class AllEmployeeHandler implements Handler {\r\n    @Override\r\n    public void handle(@NotNull Context ctx) throws Exception {\r\n        Gson gson = new Gson();\r\n        String json = gson.toJson(App.employeeService.getAllEmployees().values());\r\n        ctx.result(json);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/dev/gutierrez/handlers/employee/AllEmployeeHandler.java b/src/main/java/dev/gutierrez/handlers/employee/AllEmployeeHandler.java
--- a/src/main/java/dev/gutierrez/handlers/employee/AllEmployeeHandler.java	(revision ef9bd0d39cff1912b1ffa01c0684430ad15a5b3b)
+++ b/src/main/java/dev/gutierrez/handlers/employee/AllEmployeeHandler.java	(date 1659560085581)
@@ -10,7 +10,7 @@
     @Override
     public void handle(@NotNull Context ctx) throws Exception {
         Gson gson = new Gson();
-        String json = gson.toJson(App.employeeService.getAllEmployees().values());
+        String json = gson.toJson(App.employeeService.getAllEmployees());
         ctx.result(json);
     }
 }
Index: src/main/java/dev/gutierrez/daos/EmployeeDaoPostgres.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/dev/gutierrez/daos/EmployeeDaoPostgres.java b/src/main/java/dev/gutierrez/daos/EmployeeDaoPostgres.java
new file mode 100644
--- /dev/null	(date 1659560848498)
+++ b/src/main/java/dev/gutierrez/daos/EmployeeDaoPostgres.java	(date 1659560848498)
@@ -0,0 +1,122 @@
+package dev.gutierrez.daos;
+
+import dev.gutierrez.entities.Employee;
+import dev.gutierrez.utils.ConnectionUtil;
+
+import java.sql.*;
+import java.util.ArrayList;
+import java.util.List;
+
+public class EmployeeDaoPostgres implements EmployeeDAO{
+    @Override
+    public Employee createEmployee(Employee employee) {
+        try(Connection conn = ConnectionUtil.createConnection()){
+
+            String sql = "insert into employee values (default, ?, ?)";
+            PreparedStatement preparedStatement = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
+            preparedStatement.setString(1, employee.getFname());
+            preparedStatement.setString(2, employee.getLname());
+
+
+            preparedStatement.execute();
+
+            ResultSet rs = preparedStatement.getGeneratedKeys();
+            rs.next();
+
+            int generatedKey = rs.getInt("id");
+            employee.setId(generatedKey);
+            return employee;
+
+        }catch (SQLException e){
+            e.printStackTrace();
+        }
+        return null;
+    }
+
+    @Override
+    public Employee getEmployeeById(int id) {
+        try(Connection connection = ConnectionUtil.createConnection()){
+            String sql = "select * from employee where id = ?";
+            PreparedStatement ps = connection.prepareStatement(sql);
+            ps.setInt(1,id);
+
+            ResultSet rs = ps.executeQuery();
+            rs.next();
+
+            Employee employee = new Employee();
+            employee.setId(rs.getInt("id"));
+            employee.setFname(rs.getString("fname"));
+            employee.setLname(rs.getString("lname"));
+
+
+            return employee;
+
+        } catch(SQLException e) {
+            e.printStackTrace();
+            return null;
+        }
+    }
+
+    @Override
+    public List<Employee> getAllEmployees() {
+        try(Connection connection = ConnectionUtil.createConnection()){
+            String sql = "select * from employee";
+            PreparedStatement preparedStatement = connection.prepareStatement(sql);
+
+            ResultSet rs = preparedStatement.executeQuery();
+
+            List<Employee> employeeList = new ArrayList();
+            while(rs.next()){
+                Employee employee = new Employee();
+
+                employee.setId(rs.getInt("id"));
+                employee.setFname(rs.getString("fname"));
+                employee.setLname(rs.getString("lname"));
+
+
+                employeeList.add(employee);
+
+            }
+            return employeeList;
+        }catch(SQLException e){
+            e.printStackTrace();
+            return null;
+        }
+    }
+
+    @Override
+    public Employee updateEmployee(Employee employee) {
+        try(Connection conn = ConnectionUtil.createConnection()){
+            String sql = "update employee set fname = ?, lname = ? where id = ?";
+            PreparedStatement preparedStatement = conn.prepareStatement(sql);
+
+            preparedStatement.setString(1,employee.getFname());
+            preparedStatement.setString(2,employee.getLname());
+            preparedStatement.setInt(3,employee.getId());
+
+            preparedStatement.executeUpdate();
+            return employee;
+
+
+        }catch(SQLException e){
+            e.printStackTrace();
+            return null;
+        }
+    }
+
+    @Override
+    public boolean deleteEmployeeById(int id) {
+        try(Connection conn = ConnectionUtil.createConnection()){
+            String sql = "delete from employee where id = ?";
+            PreparedStatement ps = conn.prepareStatement(sql);
+            ps.setInt(1,id);
+            ps.execute();
+            return true;
+
+
+        }catch(SQLException e){
+            e.printStackTrace();
+            return false;
+        }
+    }
+}
Index: src/main/java/dev/gutierrez/handlers/expense/AllExpenseHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package dev.gutierrez.handlers.expense;\r\n\r\nimport com.google.gson.Gson;\r\nimport dev.gutierrez.app.App;\r\nimport io.javalin.http.Context;\r\nimport io.javalin.http.Handler;\r\nimport org.jetbrains.annotations.NotNull;\r\n\r\npublic class AllExpenseHandler implements Handler {\r\n    @Override\r\n    public void handle(@NotNull Context ctx) throws Exception {\r\n        Gson gson = new Gson();\r\n        String json = gson.toJson(App.expenseService.getAllExpenses().values());\r\n        ctx.result(json);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/dev/gutierrez/handlers/expense/AllExpenseHandler.java b/src/main/java/dev/gutierrez/handlers/expense/AllExpenseHandler.java
--- a/src/main/java/dev/gutierrez/handlers/expense/AllExpenseHandler.java	(revision ef9bd0d39cff1912b1ffa01c0684430ad15a5b3b)
+++ b/src/main/java/dev/gutierrez/handlers/expense/AllExpenseHandler.java	(date 1659560848505)
@@ -10,7 +10,7 @@
     @Override
     public void handle(@NotNull Context ctx) throws Exception {
         Gson gson = new Gson();
-        String json = gson.toJson(App.expenseService.getAllExpenses().values());
+        String json = gson.toJson(App.expenseService.getAllExpenses());
         ctx.result(json);
     }
 }
Index: src/main/java/dev/gutierrez/doas/EmployeeDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/dev/gutierrez/doas/EmployeeDAO.java b/src/main/java/dev/gutierrez/daos/EmployeeDAO.java
rename from src/main/java/dev/gutierrez/doas/EmployeeDAO.java
rename to src/main/java/dev/gutierrez/daos/EmployeeDAO.java
--- a/src/main/java/dev/gutierrez/doas/EmployeeDAO.java	(revision ef9bd0d39cff1912b1ffa01c0684430ad15a5b3b)
+++ b/src/main/java/dev/gutierrez/daos/EmployeeDAO.java	(date 1659560848530)
@@ -1,8 +1,9 @@
-package dev.gutierrez.doas;
+package dev.gutierrez.daos;
 
 import dev.gutierrez.entities.Employee;
 
-import java.util.Map;
+import java.util.List;
+
 
 public interface EmployeeDAO {
 
@@ -12,7 +13,7 @@
     // reads employee
     Employee getEmployeeById(int id);
 
-    Map<Integer,Employee> getAllEmployees();
+    List<Employee> getAllEmployees();
 
 
     // update employee
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'java'\r\n}\r\n\r\ngroup 'org.example'\r\nversion '1.0-SNAPSHOT'\r\n\r\nrepositories {\r\n    mavenCentral()\r\n}\r\n\r\ndependencies {\r\n    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'\r\n    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'\r\n    implementation group: 'io.javalin', name: 'javalin', version: '4.6.4'\r\n    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.31'\r\n    implementation group: 'com.google.code.gson', name: 'gson', version: '2.9.0'\r\n}\r\n\r\ntest {\r\n    useJUnitPlatform()\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle b/build.gradle
--- a/build.gradle	(revision ef9bd0d39cff1912b1ffa01c0684430ad15a5b3b)
+++ b/build.gradle	(date 1659554203593)
@@ -15,6 +15,7 @@
     implementation group: 'io.javalin', name: 'javalin', version: '4.6.4'
     implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.31'
     implementation group: 'com.google.code.gson', name: 'gson', version: '2.9.0'
+    implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.18'
 }
 
 test {
Index: src/main/java/dev/gutierrez/app/App.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package dev.gutierrez.app;\r\n\r\nimport dev.gutierrez.doas.EmployeeDaoLocal;\r\nimport dev.gutierrez.doas.ExpenseDaoLocal;\r\nimport dev.gutierrez.handlers.employee.*;\r\nimport dev.gutierrez.handlers.expense.*;\r\nimport dev.gutierrez.services.EmployeeService;\r\nimport dev.gutierrez.services.EmployeeServiceImpl;\r\nimport dev.gutierrez.services.ExpenseService;\r\nimport dev.gutierrez.services.ExpenseServiceImpl;\r\nimport io.javalin.Javalin;\r\n\r\npublic class App {\r\n\r\n    public static EmployeeService employeeService = new EmployeeServiceImpl(new EmployeeDaoLocal());\r\n    public static ExpenseService expenseService = new ExpenseServiceImpl(new ExpenseDaoLocal());\r\n\r\n    public static void main(String[] args) {\r\n        Javalin app = Javalin.create();\r\n\r\n        CreateEmployeeHandler createEmployeeHandler = new CreateEmployeeHandler();\r\n        DeleteEmployeeHandler deleteEmployeeHandler = new DeleteEmployeeHandler();\r\n        GetEmployeeHandler getEmployeeHandler = new GetEmployeeHandler();\r\n        UpdateEmployeeHandler updateEmployeeHandler = new UpdateEmployeeHandler();\r\n        AllEmployeeHandler allEmployeeHandler = new AllEmployeeHandler();\r\n\r\n        app.post(\"/employee\", createEmployeeHandler);\r\n        app.get(\"/employee\", allEmployeeHandler);\r\n        app.get(\"/employee/{id}\", getEmployeeHandler);\r\n        app.delete(\"/employee/{id}\", deleteEmployeeHandler);\r\n        app.put(\"/employee/{id}\", updateEmployeeHandler);\r\n\r\n\r\n        AllExpenseHandler allExpenseHandler = new AllExpenseHandler();\r\n        CreateExpenseHandler createExpenseHandler = new CreateExpenseHandler();\r\n        DeleteExpenseHandler deleteExpenseHandler = new DeleteExpenseHandler();\r\n        GetExpenseHandler getExpenseHandler = new GetExpenseHandler();\r\n        UpdateExpenseHandler updateExpenseHandler = new UpdateExpenseHandler();\r\n\r\n        app.post(\"/expense\",createExpenseHandler );\r\n        app.get(\"/expense\", allExpenseHandler);\r\n        app.get(\"/expense/{id}\", getExpenseHandler);\r\n        app.delete(\"/expense/{id}\", deleteExpenseHandler);\r\n        app.put(\"/expense/{id}\", updateExpenseHandler);\r\n\r\n\r\n\r\n        app.start();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/dev/gutierrez/app/App.java b/src/main/java/dev/gutierrez/app/App.java
--- a/src/main/java/dev/gutierrez/app/App.java	(revision ef9bd0d39cff1912b1ffa01c0684430ad15a5b3b)
+++ b/src/main/java/dev/gutierrez/app/App.java	(date 1659560848546)
@@ -1,7 +1,7 @@
 package dev.gutierrez.app;
 
-import dev.gutierrez.doas.EmployeeDaoLocal;
-import dev.gutierrez.doas.ExpenseDaoLocal;
+import dev.gutierrez.daos.EmployeeDaoPostgres;
+import dev.gutierrez.daos.ExpenseDaoLocal;
 import dev.gutierrez.handlers.employee.*;
 import dev.gutierrez.handlers.expense.*;
 import dev.gutierrez.services.EmployeeService;
@@ -12,7 +12,7 @@
 
 public class App {
 
-    public static EmployeeService employeeService = new EmployeeServiceImpl(new EmployeeDaoLocal());
+    public static EmployeeService employeeService = new EmployeeServiceImpl(new EmployeeDaoPostgres());
     public static ExpenseService expenseService = new ExpenseServiceImpl(new ExpenseDaoLocal());
 
     public static void main(String[] args) {
Index: src/main/java/dev/gutierrez/entities/Employee.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package dev.gutierrez.entities;\r\n\r\npublic class Employee {\r\n\r\n    private int id;\r\n    private String fname;\r\n    private String lname;\r\n\r\n    public Employee(int id, String fname, String lname) {\r\n        this.id = id;\r\n        this.fname = fname;\r\n        this.lname = lname;\r\n    }\r\n\r\n    public int getId() {\r\n        return id;\r\n    }\r\n\r\n    public void setId(int id) {\r\n        this.id = id;\r\n    }\r\n\r\n    public String getFname() {\r\n        return fname;\r\n    }\r\n\r\n    public void setFname(String fname) {\r\n        this.fname = fname;\r\n    }\r\n\r\n    public String getLname() {\r\n        return lname;\r\n    }\r\n\r\n    public void setLname(String lname) {\r\n        this.lname = lname;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"Employee{\" +\r\n                \"id=\" + id +\r\n                \", fname=\" + fname +\r\n                \", lname=\" + lname +\r\n                '}';\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/dev/gutierrez/entities/Employee.java b/src/main/java/dev/gutierrez/entities/Employee.java
--- a/src/main/java/dev/gutierrez/entities/Employee.java	(revision ef9bd0d39cff1912b1ffa01c0684430ad15a5b3b)
+++ b/src/main/java/dev/gutierrez/entities/Employee.java	(date 1659554987726)
@@ -6,6 +6,10 @@
     private String fname;
     private String lname;
 
+    public Employee(){
+
+    }
+
     public Employee(int id, String fname, String lname) {
         this.id = id;
         this.fname = fname;
Index: src/main/java/dev/gutierrez/doas/EmployeeDaoLocal.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/dev/gutierrez/doas/EmployeeDaoLocal.java b/src/main/java/dev/gutierrez/daos/EmployeeDaoLocal.java
rename from src/main/java/dev/gutierrez/doas/EmployeeDaoLocal.java
rename to src/main/java/dev/gutierrez/daos/EmployeeDaoLocal.java
--- a/src/main/java/dev/gutierrez/doas/EmployeeDaoLocal.java	(revision ef9bd0d39cff1912b1ffa01c0684430ad15a5b3b)
+++ b/src/main/java/dev/gutierrez/daos/EmployeeDaoLocal.java	(date 1659560848556)
@@ -1,10 +1,12 @@
-package dev.gutierrez.doas;
+package dev.gutierrez.daos;
 
 import dev.gutierrez.entities.Employee;
 
 import java.util.HashMap;
+import java.util.List;
 import java.util.Map;
 
+
 public class EmployeeDaoLocal implements EmployeeDAO{
 
     private Map<Integer,Employee> employeeTable = new HashMap();
@@ -23,7 +25,12 @@
         return employeeTable.get(id);
     }
 
-    public Map<Integer, Employee> getAllEmployees(){ return this.employeeTable; }
+    @Override
+    public List<Employee> getAllEmployees(){
+        //when it was Map<Integer, Employee>
+        //return this.employeeTable;
+        return  null;
+    }
 
 
 
Index: src/main/java/dev/gutierrez/utils/ConnectionUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package dev.gutierrez.utils;public class ConnectionUtil {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/dev/gutierrez/utils/ConnectionUtil.java b/src/main/java/dev/gutierrez/utils/ConnectionUtil.java
--- a/src/main/java/dev/gutierrez/utils/ConnectionUtil.java	(revision ef9bd0d39cff1912b1ffa01c0684430ad15a5b3b)
+++ b/src/main/java/dev/gutierrez/utils/ConnectionUtil.java	(date 1659554987718)
@@ -1,2 +1,21 @@
-package dev.gutierrez.utils;public class ConnectionUtil {
+package dev.gutierrez.utils;
+
+
+import java.sql.Connection;
+import java.sql.DriverManager;
+import java.sql.SQLException;
+
+public class ConnectionUtil {
+
+    public static Connection createConnection(){
+        try{
+                Connection conn = DriverManager.getConnection(System.getenv("AZURE_SQL_DB_EMPLOYEE"));
+                return conn;
+        } catch(SQLException e){
+            e.printStackTrace();
+            return null;
+        }
+    }
+
+
 }
Index: src/test/java/dev/gutierrez/daotests/ExpenseDaoTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package dev.gutierrez.daotests;\r\n\r\nimport dev.gutierrez.doas.EmployeeDAO;\r\nimport dev.gutierrez.doas.EmployeeDaoLocal;\r\nimport dev.gutierrez.entities.Employee;\r\nimport org.junit.jupiter.api.Assertions;\r\nimport org.junit.jupiter.api.Test;\r\n\r\nimport java.sql.SQLOutput;\r\n\r\npublic class ExpenseDaoTests {\r\n\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/dev/gutierrez/daotests/ExpenseDaoTests.java b/src/test/java/dev/gutierrez/daotests/ExpenseDaoTests.java
--- a/src/test/java/dev/gutierrez/daotests/ExpenseDaoTests.java	(revision ef9bd0d39cff1912b1ffa01c0684430ad15a5b3b)
+++ b/src/test/java/dev/gutierrez/daotests/ExpenseDaoTests.java	(date 1659560848539)
@@ -1,13 +1,5 @@
 package dev.gutierrez.daotests;
 
-import dev.gutierrez.doas.EmployeeDAO;
-import dev.gutierrez.doas.EmployeeDaoLocal;
-import dev.gutierrez.entities.Employee;
-import org.junit.jupiter.api.Assertions;
-import org.junit.jupiter.api.Test;
-
-import java.sql.SQLOutput;
-
 public class ExpenseDaoTests {
 
 
Index: src/test/java/dev/gutierrez/daotests/EmployeeDaoTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package dev.gutierrez.daotests;\r\n\r\nimport dev.gutierrez.doas.EmployeeDAO;\r\nimport dev.gutierrez.doas.EmployeeDaoLocal;\r\nimport dev.gutierrez.entities.Employee;\r\n\r\nimport org.junit.jupiter.api.*;\r\n\r\n\r\n@TestMethodOrder(MethodOrderer.OrderAnnotation.class)\r\npublic class EmployeeDaoTests {\r\n\r\n\r\n    static EmployeeDAO employeeDAO = new EmployeeDaoLocal();\r\n\r\n    @Test\r\n    @Order(1)\r\n    void create_employee_test(){\r\n        Employee employee = new Employee(0, \"Alberto\", \"Gutierrez\");\r\n        Employee savedEmployee = employeeDAO.createEmployee(employee);\r\n        Assertions.assertNotEquals(0, savedEmployee.getId());\r\n        System.out.println(savedEmployee);\r\n    }\r\n\r\n    @Test\r\n    @Order(2)\r\n    void get_employee_by_id_test(){\r\n        Employee employee = employeeDAO.getEmployeeById(1); // we will assume we saved the first book\r\n        Assertions.assertEquals(\"Alberto\", employee.getFname());\r\n    }\r\n\r\n    @Test\r\n    @Order(3)\r\n    void update_employee_test(){\r\n\r\n        Employee employee2 = new Employee(1, \"Luis\", \"Gutierrez\");\r\n        Employee updatedEmployee = employeeDAO.updateEmployee(employee2);\r\n        Employee employee = employeeDAO.getEmployeeById(1);\r\n        Assertions.assertEquals(\"Luis\", employee.getFname());\r\n        System.out.println();\r\n\r\n    }\r\n\r\n    @Test\r\n    @Order(4)\r\n    void delete_employee_by_id_test(){\r\n        boolean result = employeeDAO.deleteEmployeeById(1);\r\n        Assertions.assertTrue(result);\r\n    }\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/dev/gutierrez/daotests/EmployeeDaoTests.java b/src/test/java/dev/gutierrez/daotests/EmployeeDaoTests.java
--- a/src/test/java/dev/gutierrez/daotests/EmployeeDaoTests.java	(revision ef9bd0d39cff1912b1ffa01c0684430ad15a5b3b)
+++ b/src/test/java/dev/gutierrez/daotests/EmployeeDaoTests.java	(date 1659560848520)
@@ -1,7 +1,7 @@
 package dev.gutierrez.daotests;
 
-import dev.gutierrez.doas.EmployeeDAO;
-import dev.gutierrez.doas.EmployeeDaoLocal;
+import dev.gutierrez.daos.EmployeeDAO;
+import dev.gutierrez.daos.EmployeeDaoLocal;
 import dev.gutierrez.entities.Employee;
 
 import org.junit.jupiter.api.*;
Index: src/main/java/dev/gutierrez/services/EmployeeServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package dev.gutierrez.services;\r\n\r\nimport dev.gutierrez.doas.EmployeeDAO;\r\nimport dev.gutierrez.entities.Employee;\r\n\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\npublic class EmployeeServiceImpl implements EmployeeService{\r\n\r\n    private EmployeeDAO employeeDAO;\r\n\r\n    public EmployeeServiceImpl(EmployeeDAO employeeDAO){\r\n        this.employeeDAO = employeeDAO;\r\n    }\r\n    @Override\r\n    public Employee createEmployee(Employee employee) {\r\n\r\n        if(employee.getFname().length() == 0){\r\n            throw new RuntimeException(\"employee must have a First Name\");\r\n        }\r\n        if(employee.getLname().length() == 0){\r\n            throw new RuntimeException(\"Employee must have a Last Name\");\r\n        }\r\n        Employee savedEmployee = this.employeeDAO.createEmployee(employee);\r\n        return savedEmployee;\r\n    }\r\n\r\n    @Override\r\n    public Employee getEmployee(int id) {\r\n        return this.employeeDAO.getEmployeeById(id);\r\n\r\n    }\r\n\r\n    @Override\r\n    public Map<Integer,Employee> getAllEmployees() {\r\n        return this.employeeDAO.getAllEmployees();\r\n\r\n    }\r\n\r\n    @Override\r\n    public boolean deleteEmployee(int id) {\r\n        boolean isSuccessful = this.employeeDAO.deleteEmployeeById(id);\r\n        return isSuccessful;\r\n    }\r\n\r\n    @Override\r\n    public Employee editEmployee(Employee employee) {\r\n       if (employee.getFname().length() == 0){\r\n           throw new RuntimeException(\"First name cannot be empty\");\r\n       }\r\n       if(employee.getLname().length() == 0){\r\n           throw new RuntimeException(\"Last name cannot be empty\");\r\n       }\r\n       return this.employeeDAO.updateEmployee(employee);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/dev/gutierrez/services/EmployeeServiceImpl.java b/src/main/java/dev/gutierrez/services/EmployeeServiceImpl.java
--- a/src/main/java/dev/gutierrez/services/EmployeeServiceImpl.java	(revision ef9bd0d39cff1912b1ffa01c0684430ad15a5b3b)
+++ b/src/main/java/dev/gutierrez/services/EmployeeServiceImpl.java	(date 1659560848578)
@@ -1,10 +1,10 @@
 package dev.gutierrez.services;
 
-import dev.gutierrez.doas.EmployeeDAO;
+import dev.gutierrez.daos.EmployeeDAO;
 import dev.gutierrez.entities.Employee;
 
 import java.util.List;
-import java.util.Map;
+
 
 public class EmployeeServiceImpl implements EmployeeService{
 
@@ -33,10 +33,10 @@
     }
 
     @Override
-    public Map<Integer,Employee> getAllEmployees() {
+    public List<Employee> getAllEmployees() {
         return this.employeeDAO.getAllEmployees();
-
     }
+
 
     @Override
     public boolean deleteEmployee(int id) {
Index: src/main/java/dev/gutierrez/doas/ExpenseDaoLocal.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/dev/gutierrez/doas/ExpenseDaoLocal.java b/src/main/java/dev/gutierrez/daos/ExpenseDaoLocal.java
rename from src/main/java/dev/gutierrez/doas/ExpenseDaoLocal.java
rename to src/main/java/dev/gutierrez/daos/ExpenseDaoLocal.java
--- a/src/main/java/dev/gutierrez/doas/ExpenseDaoLocal.java	(revision ef9bd0d39cff1912b1ffa01c0684430ad15a5b3b)
+++ b/src/main/java/dev/gutierrez/daos/ExpenseDaoLocal.java	(date 1659560848571)
@@ -1,9 +1,10 @@
-package dev.gutierrez.doas;
+package dev.gutierrez.daos;
 
 
 import dev.gutierrez.entities.Expense;
 
 import java.util.HashMap;
+import java.util.List;
 import java.util.Map;
 
 public class ExpenseDaoLocal implements ExpenseDAO{
@@ -26,8 +27,9 @@
     }
 
     @Override
-    public Map<Integer, Expense> getAllExpenses() {
-        return this.expenseTable;
+    public List<Expense> getAllExpenses() {
+        return null;
+        //return this.expenseTable;
     }
 
     @Override
Index: src/main/java/dev/gutierrez/doas/ExpenseDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/dev/gutierrez/doas/ExpenseDAO.java b/src/main/java/dev/gutierrez/daos/ExpenseDAO.java
rename from src/main/java/dev/gutierrez/doas/ExpenseDAO.java
rename to src/main/java/dev/gutierrez/daos/ExpenseDAO.java
--- a/src/main/java/dev/gutierrez/doas/ExpenseDAO.java	(revision ef9bd0d39cff1912b1ffa01c0684430ad15a5b3b)
+++ b/src/main/java/dev/gutierrez/daos/ExpenseDAO.java	(date 1659560848514)
@@ -1,8 +1,9 @@
-package dev.gutierrez.doas;
+package dev.gutierrez.daos;
 
 import dev.gutierrez.entities.Expense;
 
-import java.util.Map;
+import java.util.List;
+
 
 public interface ExpenseDAO {
 
@@ -10,7 +11,7 @@
 
     Expense getExpenseById(int id);
 
-    Map<Integer, Expense> getAllExpenses();
+    List<Expense> getAllExpenses();
 
     Expense updateExpense(Expense expense);
 
Index: src/main/java/dev/gutierrez/services/EmployeeService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package dev.gutierrez.services;\r\n\r\nimport dev.gutierrez.entities.Employee;\r\n\r\n\r\nimport java.util.Map;\r\n\r\npublic interface EmployeeService {\r\n    Employee createEmployee(Employee employee);\r\n\r\n    Employee getEmployee(int id);\r\n    Map<Integer,Employee> getAllEmployees();\r\n\r\n    boolean deleteEmployee(int id);\r\n\r\n    Employee editEmployee(Employee employee);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/dev/gutierrez/services/EmployeeService.java b/src/main/java/dev/gutierrez/services/EmployeeService.java
--- a/src/main/java/dev/gutierrez/services/EmployeeService.java	(revision ef9bd0d39cff1912b1ffa01c0684430ad15a5b3b)
+++ b/src/main/java/dev/gutierrez/services/EmployeeService.java	(date 1659560045720)
@@ -3,13 +3,14 @@
 import dev.gutierrez.entities.Employee;
 
 
+import java.util.List;
 import java.util.Map;
 
 public interface EmployeeService {
     Employee createEmployee(Employee employee);
 
     Employee getEmployee(int id);
-    Map<Integer,Employee> getAllEmployees();
+    List<Employee> getAllEmployees();
 
     boolean deleteEmployee(int id);
 
Index: src/main/java/dev/gutierrez/services/ExpenseServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package dev.gutierrez.services;\r\n\r\nimport dev.gutierrez.doas.ExpenseDAO;\r\nimport dev.gutierrez.entities.Expense;\r\n\r\nimport java.util.Map;\r\n\r\npublic class ExpenseServiceImpl implements ExpenseService{\r\n   private ExpenseDAO expenseDAO;\r\n\r\n   public ExpenseServiceImpl(ExpenseDAO expenseDAO){\r\n       this.expenseDAO = expenseDAO;\r\n   }\r\n\r\n\r\n    @Override\r\n    public Expense createExpense(Expense expense) {\r\n       Expense savedExpense = this.expenseDAO.createExpense(expense);\r\n       if(expense.getStatus() == null){\r\n           throw new RuntimeException(\"must have a status!\");\r\n       }else if(expense.getType() == null) {\r\n           throw new RuntimeException(\"must have a type\");\r\n       } else if(expense.getDescription().length() == 0) {\r\n           throw new RuntimeException((\"please insert a description\"));\r\n       } else{\r\n           return savedExpense;\r\n       }\r\n    }\r\n\r\n    @Override\r\n    public Expense getExpense(int id) {\r\n\r\n        return this.expenseDAO.getExpenseById(id);\r\n    }\r\n\r\n    @Override\r\n    public Map<Integer, Expense> getAllExpenses() {\r\n        return this.expenseDAO.getAllExpenses();\r\n    }\r\n\r\n    @Override\r\n    public boolean deleteExpense(int id) {\r\n       boolean isTrue = this.expenseDAO.deleteExpenseById(id);\r\n        return isTrue;\r\n    }\r\n\r\n    @Override\r\n    public Expense editExpense(Expense expense) {\r\n        if(expense.getStatus() == null){\r\n            throw new RuntimeException(\"must have a status!\");\r\n        }else if(expense.getType() == null) {\r\n            throw new RuntimeException(\"must have a type\");\r\n        } else if(expense.getDescription().length() == 0) {\r\n            throw new RuntimeException((\"please insert a description\"));\r\n        } else{\r\n            return this.expenseDAO.updateExpense(expense);\r\n        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/dev/gutierrez/services/ExpenseServiceImpl.java b/src/main/java/dev/gutierrez/services/ExpenseServiceImpl.java
--- a/src/main/java/dev/gutierrez/services/ExpenseServiceImpl.java	(revision ef9bd0d39cff1912b1ffa01c0684430ad15a5b3b)
+++ b/src/main/java/dev/gutierrez/services/ExpenseServiceImpl.java	(date 1659560848586)
@@ -1,9 +1,10 @@
 package dev.gutierrez.services;
 
-import dev.gutierrez.doas.ExpenseDAO;
+import dev.gutierrez.daos.ExpenseDAO;
 import dev.gutierrez.entities.Expense;
 
-import java.util.Map;
+import java.util.List;
+
 
 public class ExpenseServiceImpl implements ExpenseService{
    private ExpenseDAO expenseDAO;
@@ -34,8 +35,9 @@
     }
 
     @Override
-    public Map<Integer, Expense> getAllExpenses() {
+    public List<Expense> getAllExpenses() {
         return this.expenseDAO.getAllExpenses();
+
     }
 
     @Override
Index: src/main/java/dev/gutierrez/services/ExpenseService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package dev.gutierrez.services;\r\n\r\nimport dev.gutierrez.entities.Expense;\r\n\r\nimport java.util.Map;\r\n\r\npublic interface ExpenseService {\r\n    Expense createExpense(Expense expense);\r\n\r\n    Expense getExpense(int id);\r\n    Map<Integer, Expense> getAllExpenses();\r\n\r\n    boolean deleteExpense(int id);\r\n\r\n    Expense editExpense(Expense expense);\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/dev/gutierrez/services/ExpenseService.java b/src/main/java/dev/gutierrez/services/ExpenseService.java
--- a/src/main/java/dev/gutierrez/services/ExpenseService.java	(revision ef9bd0d39cff1912b1ffa01c0684430ad15a5b3b)
+++ b/src/main/java/dev/gutierrez/services/ExpenseService.java	(date 1659560848489)
@@ -2,13 +2,14 @@
 
 import dev.gutierrez.entities.Expense;
 
-import java.util.Map;
+import java.util.List;
+
 
 public interface ExpenseService {
     Expense createExpense(Expense expense);
 
     Expense getExpense(int id);
-    Map<Integer, Expense> getAllExpenses();
+    List<Expense> getAllExpenses();
 
     boolean deleteExpense(int id);
 
